const Mainloop = imports.mainloop;
const cinnodeLoop = process.binding('mainloop');
const ids = new Set();
const clearID = (id) => {
  if (ids.has(id)) {
    ids.delete(id);
    cinnodeLoop.go();
  }
};
const createClearTimer = () => (id) => Mainloop.source_remove(id);

const createSetTimer = (repeat) => {
  return (fn, ms, ...args) => {
    const id = Mainloop.timeout_add((ms * 1) || 0, () => {
      if (!repeat) {
        clearID(id);
      }
      fn.apply(null, args);
      return repeat;
    });
    ids.add(id);
    cinnodeLoop.wait();
    return id;
  };
}

const timers = {
  clearInterval: createClearTimer(),
  clearTimeout: createClearTimer(),
  setInterval: createSetTimer(true),
  setTimeout: createSetTimer(false)
};

Object.defineProperties(
  global, {
    clearInterval: {
      enumerable: true,
      value: timers.clearInterval
    },
    clearTimeout: {
      enumerable: true,
      value: timers.clearTimeout
    },
    setInterval: {
      enumerable: true,
      value: timers.setInterval
    },
    setTimeout: {
      enumerable: true,
      value: timers.setTimeout
    }
  }
);

module.exports = timers;